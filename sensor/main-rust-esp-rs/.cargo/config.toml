[build]
# Uncomment the relevant target for your chip here (ESP32, ESP32-S2, ESP32-S3 or ESP32-C3)
#target = "xtensa-esp32-espidf"
#target = "xtensa-esp32s2-espidf"
#target = "xtensa-esp32s3-espidf"
target = "riscv32imc-esp-espidf"

[target.xtensa-esp32-espidf]
linker = "ldproxy"

[target.xtensa-esp32s2-espidf]
linker = "ldproxy"

[target.xtensa-esp32s3-espidf]
linker = "ldproxy"

[target.riscv32imc-esp-espidf]
linker = "ldproxy"

# Future - necessary for the experimental "native build" of esp-idf-sys with ESP32C3
# See also https://github.com/ivmarkov/embuild/issues/16
rustflags = ["-C", "default-linker-libraries"]

[unstable]

build-std = ["std", "panic_abort"]
build-std-features = ["panic_immediate_abort"]

[env]

# The esp-idf-sys build features "native" and "std" are enabled per default so we don't need anything to do here

# Use the latest esp-idf tag in the master branch. value = "master" would checkout the latest commit which would be more unstable
ESP_IDF_VERSION = { value = "tag:v5.1-dev"  } # { value = "master" }, { value = "branch:release/v4.4" }

# These configurations will pick up your custom "sdkconfig.release", "sdkconfig.debug" or "sdkconfig.defaults[.*]" files
# that you might put in the root of the project
# The easiest way to generate a full "sdkconfig" configuration (as opposed to manually enabling only the necessary flags via "sdkconfig.defaults[.*]"
# is by running "cargo pio espidf menuconfig" (that is, if using the pio builder)
#ESP_IDF_SDKCONFIG = { value = "sdkconfig.release;sdkconfig.debug" }
ESP_IDF_SDKCONFIG_DEFAULTS = { value = """
./sensor/main-rust-esp-rs/sdkconfig.defaults;
./sensor/main-rust-esp-rs/sdkconfig.defaults.esp32c3;
"""}
# ./sensor/main-rust-esp-rs/sdkconfig.debug;

# esp-idf-sys enables all components per default. Defining ESP_IDF_COMPONENTS here
# reduces the set of linked components which leads to less compiler errors in case of updated
# 3rd party dependencies
ESP_IDF_COMPONENTS = { value = "pthread;fatfs;nvs_flash;esp_wifi;esp_netif;lwip;esp_http_client;wear_levelling;" }